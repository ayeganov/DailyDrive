"""adding extra field to rewards

Revision ID: 4f0315430fe3
Revises: bc9113720459
Create Date: 2024-05-28 11:31:38.268105

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '4f0315430fe3'
down_revision: Union[str, None] = 'bc9113720459'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chore_history', sa.Column('reward_func', sa.String(), nullable=True))
    op.alter_column('chore_history', 'expired_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_chore_history_chore_id', table_name='chore_history')
    op.drop_index('ix_chore_history_user_id', table_name='chore_history')
    op.create_index(op.f('ix_chore_history_id'), 'chore_history', ['id'], unique=False)
    op.add_column('chores', sa.Column('reward_func', sa.String(), nullable=True))
    op.alter_column('chores', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('chores', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.add_column('rewards', sa.Column('tv_time_points', sa.Float(), nullable=False))
    op.add_column('rewards', sa.Column('game_time_points', sa.Float(), nullable=False))
    op.add_column('rewards', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('rewards', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_column('rewards', 'time_points')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('rewards', sa.Column('time_points', sa.INTEGER(), autoincrement=False, nullable=False))
    op.alter_column('rewards', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('rewards', 'updated_at')
    op.drop_column('rewards', 'game_time_points')
    op.drop_column('rewards', 'tv_time_points')
    op.alter_column('chores', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('chores', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('chores', 'reward_func')
    op.drop_index(op.f('ix_chore_history_id'), table_name='chore_history')
    op.create_index('ix_chore_history_user_id', 'chore_history', ['user_id'], unique=False)
    op.create_index('ix_chore_history_chore_id', 'chore_history', ['chore_id'], unique=False)
    op.alter_column('chore_history', 'expired_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('chore_history', 'reward_func')
    # ### end Alembic commands ###
